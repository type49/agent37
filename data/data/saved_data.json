[
  {
    "html": [
      {
        "item": "https://www.coronavirus2020.kz/",
        "time": "2020-05-28 | 23.41"
      }
    ]
  },
  {
    "html": [
      {
        "item": "https://ru.stackoverflow.com/questions/1132909/Бинарный-поиск-отстой",
        "time": "2020-05-28 | 23.41"
      }
    ]
  },
  {
    "text": [
      {
        "item": "E:\\mainqueen\\Scripts\\python.exe E:/type49/python/TP/mainqueen/main.py\n",
        "time": "2020-05-28 | 20.55.49"
      }
    ]
  },
  {
    "text": [
      {
        "item": "E:\\mainqueen\\Scripts\\python.exe E:/type49/python/TP/mainqueen/main.py\n",
        "time": "2020-05-28 | 16.11"
      }
    ]
  },
  {
    "text": [
      {
        "item": "\nИспользование open() и try ... except имеет некоторые преимущества, когда доходит до обработки файлов в Python. Это может помочь вам избежать накладок, вызванн open() и try ... except имеет некоторые преимущества, когда доходит до обработки файлов в Python. Это может помочь вам избежать накладок, вызванн open() и try ... except имеет некоторые преимущества, когда доходит до обработки файлов в Python. Это может помочь вам избежать накладок, вызванн open() и try ... except имеет некоторые преимущества, когда доходит до обработки файлов в Python. Это может помочь вам избежать накладок, вызванных определенными условиями существования файла:\n\nПредставим, что файл существует в тот момент, когда вы запускаете проверку, файл удаляется другим процессом независящий от вас. Когда вы пытаетесь открыть файл для работы с ним, он исчезает и ваша программа получает ошибку.\n\nМы рассмотрим этот случай в конце руководства. Но перед этим, запрыгнем в еще одну кроличью нору. Рассмотрим еще один способ того, как проверить, существует ли файл в Python.\n\nПример проверки существования файла pathlib.Path.exists() (Python 3.4+)\nPython 3.4 и выше содержит модуль pathlib, который предоставляет объектно-ориентированный интерфейс для работы с путями файловых систем. Использование этого модуля намного приятнее, чем работа с путями в виде объектов строк.\n\nОн предоставляет абстракции и вспомогательные функции для множества операций с файловыми системами, включая проверку на наличие и поиск того, указывает ли путь на файл или папку.\n\nЧтобы узнать, указывает ли путь на настоящий файл, вы можете использовать метод Path.exists(). Чтобы узнать, является путь файлом, или символической ссылкой, а не папкой, вам захочется воспользоваться Path.is_file().\n\nВот рабочий пример для обоих методов pathlib.Path:",
        "time": "2020-05-28 | 22.53.59"
      }
    ]
  }
]